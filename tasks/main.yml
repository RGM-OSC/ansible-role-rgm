---
- name: "Import prerequisites tasks"
  ansible.builtin.import_tasks: prerequisites/prerequisites.yml

- name: "Import business tasks"
  ansible.builtin.import_tasks: business/business.yml

- name: "Flush handlers for yum modifications"
  ansible.builtin.meta: flush_handlers

- name: "Import SELinux tasks"
  tags:
    - always
  ansible.builtin.import_tasks: selinux/selinux.yml

- name: "Import MariaDB install and preconfigure tasks"
  tags:
    - install
    - rgm_install
    - mariadb
    - rgm_mariadb
    - grafana
    - rgm_grafana
    - nagvis
    - rgm_nagvis
    - lilac
    - rgm_lilac
    - thruk
    - rgm_thruk
    - notifier
    - rgm_notifier
  block:
    - name: "Import MariaDB install tasks"
      ansible.builtin.import_tasks: mariadb/mariadb_install.yml

### installs RGM packages & dependencies
- name: "Import RGM packages installations tasks"
  tags:
    - install
    - rgm_install
    - packages
    - rgm_packages
  ansible.builtin.import_tasks: rgm/rgm_packages.yml

- name: "Import RGM postinstall tasks"
  tags:
    - install
    - rgm_install
  ansible.builtin.import_tasks: rgm/rgm_postinstall.yml

- name: "Import Lilac DB deployment tasks"
  tags:
    - install
    - rgm_install
    - lilac
    - rgm_lilac
  ansible.builtin.import_tasks: lilac/lilac_db.yml

- name: "Import Notifier DB deployment tasks"
  tags:
    - install
    - rgm_install
    - notifier
    - rgm_notifier
  ansible.builtin.import_tasks: notifier/notifier_db.yml

- name: "Import MariaDB backup account tasks"
  tags:
    - install
    - rgm_install
  ansible.builtin.import_tasks: mariadb/backup/mariadb_backup.yml

- name: "Import firewall tasks"
  tags:
    - install
    - rgm_install
    - firewall
    - rgm_firewall
  ansible.builtin.import_tasks: firewall/firewall.yml

- name: "Create Ansible tmp dirs for alternate users"
  loop:
    - "{{ rgmweb_user }}"
    - nagios
  tags:
    - install
    - rgm_install
    - users
    - rgm_users
  ansible.builtin.file:
    path: "/tmp/.ansible-{{ item }}/tmp"
    state: directory
    recurse: true
    owner: "{{ item }}"
    group: "{{ rgm_group }}"
    mode: "0700"

- name: "Import RGMA tasks"
  tags:
    - install
    - rgm_install
    - rgma
  ansible.builtin.import_tasks: rgm/rgma.yml

- name: "Import NTP configuration tasks"
  tags:
    - install
    - rgm_install
    - rgm_ntp
  ansible.builtin.import_tasks: ntp/ntp.yml

- name: "Import http tasks"
  tags:
    - install
    - rgm_install
    - http
    - rgm_http
  ansible.builtin.import_tasks: http/http.yml

- name: "Import elasticsearch tasks"
  tags:
    - install
    - rgm_install
    - elasticsearch
    - rgm_elasticsearch
  ansible.builtin.import_tasks: elastic/elastic.yml

- name: "Import prometheus tasks"
  tags:
    - install
    - rgm_install
    - prometheus
    - rgm_prometheus
  ansible.builtin.import_tasks: prometheus/prometheus.yml

- name: "Import grafana tasks"
  tags:
    - install
    - rgm_install
    - grafana
    - rgm_grafana
  ansible.builtin.import_tasks: grafana/grafana.yml

- name: "Import nagios tasks"
  tags:
    - install
    - rgm_install
    - nagios
    - rgm_nagios
  ansible.builtin.import_tasks: nagios/nagios.yml

- name: "Import nagvis tasks"
  tags:
    - install
    - rgm_install
    - nagvis
    - rgm_nagvis
  ansible.builtin.import_tasks: nagvis/nagvis.yml

- name: "Import notifier configure tasks"
  tags:
    - install
    - rgm_install
    - notifier
    - rgm_notifier
  ansible.builtin.import_tasks: notifier/notifier_configure.yml

- name: "Import nagflux tasks"
  tags:
    - install
    - rgm_install
    - nagflux
    - rgm_nagflux
  ansible.builtin.import_tasks: nagflux/nagflux.yml

- name: "Import lilac export tasks"
  tags:
    - install
    - rgm_install
    - lilac
    - rgmexport
    - rgm_lilac
  ansible.builtin.import_tasks: lilac/lilac_export.yml

- name: "Import NagiosBP tasks"
  tags:
    - install
    - rgm_install
    - nagiosbp
    - rgm_nagiosbp
  ansible.builtin.import_tasks: nagiosbp/nagiosbp.yml

- name: "Enable RGM daemons"
  loop: "{{ rgm_services }}"
  tags:
    - install
    - rgm_install
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    masked: false
    state: started

- name: "Update mlocate database"
  ansible.builtin.command: /usr/bin/updatedb -f "$nodevs"

### 4any post-config
- name: "4any post-configuration"
  when: rgm_central_host is defined
  tags:
    - install
    - rgm_install
    - 4any
  ansible.builtin.include_tasks:
    file: 4any.yml
    apply:
      tags: 4any
