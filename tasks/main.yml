---
# main tasks file for ansible-role-rgm
# vim: bs=2 sw=2 expandtab:

# As nagios 4 is present in EPEL repo, disable nagios from EPEL
- name: exclude nagios from EPEL repo
  ini_file:
    path: /etc/yum.repos.d/epel.repo
    section: "{{ item }}"
    option: exclude
    value: 'nagios*'
  with_items:
  - epel
  - epel-debuginfo
  - epel-source
  register: update_epel
  tags: packages

- name: force yum clean & make cache
  yum:
    update_cache: yes
  when: update_epel
  tags: packages

### selinux
# todo: configure RGM to work smoothly *with* selinux enabled
- name: disable SELinux
  selinux:
    state: disabled

### MariaDB base configuration
- name: configure mariadb
  include_tasks: mariadb.yml
  tags:
  - mariadb

### installs RGM packages & dependencies
- name: install RGM packages (it may take some time...)
  yum:
    update_cache: no
    name: "{{ packages }}"
    state: latest
  vars:
    packages: "{{ packages_system + packages_mariadb + packages_apache + packages_elastic + packages_influx_grafana + packages_rgm }}"
  retries: 10
  delay: 2
  register: yum_result
  until: yum_result.rc == 0
  tags: packages

- name: set vimrc file for root user
  copy:
    src: vimrc
    dest: /root/.vimrc
    owner: root
    group: root
    mode: 0640

### sudoers base configuration
- name: set sudoers config file
  template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/rgm"
    owner: root
    group: root
    mode: 0400
    seuser: system_u
    serole: object_r
    setype: etc_t
    selevel: s0

### configure chronyd
- name: configure chrony daemon
  include_tasks: ntp.yml
  tags:
  - ntp
  - chrony


### php base configuration
- name: configure apache/php
  include_tasks: http.yml
  tags:
  - httpd
  - php


### configure Elastic Stack
- name: configure elastic stack
  include_tasks: elastic.yml
  tags:
  - elastic
  - metricbeat

### Actually influxdb and nagflux are correctly pre-configured
### out-of-the-box from their respective RPM package...
### only Grafana needs some customization as the RPM package
### comes untouched from upstream provided (Grafana Labs)
- name: configure influxdb/nagflux/grafana/histou
  include_tasks: grafana.yml
  tags:
  - influxdb
  - nagflux
  - histou
  - grafana

- name: kernel hardening (sysctl) following ANSII recomendations
  copy:
    src: sysctl_ansii.conf
    dest: /etc/sysctl.d/ansii-fr.conf
    owner: root
    group: root
    mode: 0644

### NagVis configuration
- name: configure NagVis
  ini_file:
    path: "{{ rgm_root_path }}/nagvis/etc/nagvis.ini.php"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
  - { section: 'auth_mysql', option: 'dbhost', value: '127.0.0.1' }
  - { section: 'auth_mysql', option: 'dbport', value: '3306' }
  - { section: 'auth_mysql', option: 'dbname', value: "{{ db_nagvis }}" }
  - { section: 'auth_mysql', option: 'dbuser', value: "{{ mariadb_user }}" }
  - { section: 'auth_mysql', option: 'dbpass', value: "{{ mariadb_pwd }}" }

- name: put nagvis mysql db schema init script
  template:
    src: nagvis/ini_sql.php.j2
    dest: "{{ rgm_root_path }}/nagvis/share/frontend/nagvis-js/init_sql.php"
    owner: root
    group: root
    mode: 0600

- name: force nagvis mysql schema initialization
  command: "php {{ rgm_root_path }}/nagvis/share/frontend/nagvis-js/init_sql.php"
  register: nagvis_init_sql
  changed_when: nagvis_init_sql > 0
  failed_when: nagvis_init_sql > 1

### firewalld configuration
- name: configure firewalld services
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
  - ssh
  - http
  - https
  notify: service_restart_firewalld

### lilac export nagios config

- name: update hostname on lilac config for RGM host entry
  shell: echo "UPDATE nagios_host SET name = '$(hostname)' WHERE id = 1;" | mysql lilac

- name: get a valid RGMAPI token
  uri:
    url: 'https://localhost/rgmapi/getApiKey?&username=admin&password=admin'
    method: GET
    body_format: json
    validate_certs: no
    status_code: 200
  register: auth_rgmapi

- name: export Lilac configuration
  uri:
    url: "https://localhost/rgmapi/exportConfiguration?&username=admin&apiKey={{ auth_rgmapi.json.RGMAPI_KEY }}"
    method: POST
    body_format: json
    body: '{ "jobName": "Nagios Export" }'
    validate_certs: no
    status_code: 200
  when: auth_rgmapi is succeeded
  notify: service_reload_nagios


### enable and start RGM services
- name: enable RGM daemons
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items: "{{ rgm_services }}"

- name: insert rgmupdate function in bashrc file
  blockinfile:
    path: /root/.bashrc
    block: |
      function rgmupdate () {
        SAVPATH=$(pwd)
        cd ~/ansible-rgm
        git pull && ansible-galaxy install -f -p roles -r roles/requirements.yml && ansible-playbook rgm-installer.yml
        cd $SAVPATH
      }