---
# Tasks for Elastic Stack RGM setup
# vim: bs=2 sw=2 expandtab:

# This is redundant as all RPM packages are already installed from main tasks
# but we secure it in case the role might be called directly from its tags
- name: ensure Elastic Stack is installed
  yum:
    update_cache: no
    name: "{{ packages_elastic }}"
    state: present

 ### Configure Elasticsearch

- name: create elastic backup repo directory
  file:
    path: /srv/rgm/elastic
    owner: elasticsearch
    group: rgm
    mode: 0750
    state: directory
    recurse: yes

- name: configure Elasticsearch config file
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  with_items:
  - { regex: '^(#\s*)?network.host: ',  line: "network.host: ['127.0.0.1']" }
  - { regex: '^(#\s*)?path.repo: ',     line: 'path.repo: "/srv/rgm/elastic"' }
  notify: service_restart_elasticsearch

#- name: create an elasticsearch local backup reposotory
#curl -XPUT 'http://127.0.0.1:9200/_snapshot/backup' -H 'Content-Type: application/json' -d '{ "type": "fs", "settings": {"location": "/srv/rgm/elastic/backups","compress": true}}'

# backup kibana:
  # curator_cli  snapshot --repository backup --name ".kibana_empty" --filter_list '{"filtertype": "pattern", "kind": "prefix", "value": ".kibana", "exclude": "False"}'


- name: copy curator config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: root
    group: root
    mode: 0644
  with_items:
  - { src: 'elastic/curator_actions.yml.j2',    dst: '/etc/elasticsearch/actions.yml' }
  - { src: 'elastic/curator.yml.j2',            dst: '/etc/elasticsearch/curator.yml' }

- name: set cron job for curator
  copy:
    content: "10 0 * * * * root /usr/bin/curator --config /etc/elasticsearch/curator.yml /etc/elasticsearch/actions.yml &> /dev/null"
    dest: /etc/cron.d/elastic_curator
    owner: root
    group: root
    mode: 0644
  notify: service_reload_crond


### Configure kibana

- name: configure Kibana config file
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  with_items:
  - { regex: '^(#\s*)?server.port',              line: 'server.port: 5601' }
  - { regex: '^(#\s*)?server.host',              line: 'server.host: "localhost"' }
  - { regex: '^(#\s*)?server.basePath',          line: 'server.basePath: "/kibana"' }
  - { regex: '^(#\s*)?server.rewriteBasePath',   line: 'server.rewriteBasePath: true' }
  notify: service_restart_kibana


### configure metricsbeat

- name: configure metricbeat - reload period
  lineinfile:
    path: /etc/metricbeat/metricbeat.yml
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  with_items:
  - { regex: '^(#\s*)?reload.period: ',                line: 'reload.period: 10s' }
  - { regex: '^(#\s*)?host:\s+".*:5601"',              line: "host: \"127.0.0.1:5601\""}
  - { regex: '^\s+(#)?host:\s+"(.*:5601.*|.*kibana)"', line: "  host: \"http://localhost/kibana\""}
  - { regex: '^(#\s*)?host:\s+".*:9200"',              line: "host: \"127.0.0.1:9200\"" }
  register: metricbeat_config
  notify: service_restart_metricbeat

- name: enable metricbeat modules
  command: "mv /etc/metricbeat/modules.d/{{ item }}.disabled /etc/metricbeat/modules.d/{{ item }}"
  args:
    creates: "/etc/metricbeat/modules.d/{{ item }}"
  with_items:
  - apache.yml
  - kibana.yml
  - mysql.yml
  notify: service_restart_metricbeat

- name: "configure metricsets mysql metricbeat"
  lineinfile:
    path: /etc/metricbeat/modules.d/mysql.yml
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.after }}"
  with_items:
  - { regex: '^(\s*#)?\s*metricsets:',     line: '  metricsets:', after: '- module: mysql' }
  - { regex: '^(\s*#)?\s*- status',     line: '  - status', after: '^\s+metricsets:' }
  notify: service_restart_metricbeat

- name: "configure DSN for mysql metricbeat"
  lineinfile:
    path: /etc/metricbeat/modules.d/mysql.yml
    regexp: '^(\s*hosts: \[").*("\])$'
    backrefs: yes
    line: "\\1{{ mariadb_ro_user }}:{{ mariadb_ro_pwd }}@tcp(127.0.0.1:3306)/\\2"
  notify: service_restart_metricbeat

- block:
  - name: force elasticsearch and kibana to be restarted to finalize metricbeat configuration
    meta: flush_handlers

  - name: setup metricbeat indexes and dashboards
    command: metricbeat setup -c /etc/metricbeat/metricbeat.yml -path.home /usr/share/metricbeat -path.config /etc/metricbeat -path.data /var/lib/metricbeat -path.logs /var/log/metricbeat
  when: metricbeat_config.changed

# curl -XPUT -H "Content-Type: application/json" http://localhost:9200/_all/_settings -d '{"index.blocks.read_only_allow_delete": null}'