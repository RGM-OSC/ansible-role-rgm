---
# tasks for mariadb_post RGM setup
# mariadb database post-configuration
# vim: bs=2 sw=2 expandtab:

# Lilac
- name: check if lilac schema is filled
  command: >
    mysql --batch --skip-column-names {{ db_lilac }} --execute='select value from lilac_configuration where `key` = "db_build";'
  register: lilac_schema
  changed_when: lilac_schema.stdout != db_lilac_schema_version
  ignore_errors: yes

- block:
  - name: inject default Lilac schema on database
    shell: "mysql {{ db_lilac }} < /var/lib/rgm/lilac/lilac-rgm.sql"
    args:
      executable: /bin/bash
    register: lilac_schema_inject
    changed_when: lilac_schema_inject.rc == 1
    failed_when: lilac_schema_inject.rc == 2

  - name: set AUTO_INCREMENT for customer
    command: /usr/sbin/rgm-lilac-manage-auto-increments -s

  when: lilac_schema.failed

#- name: import lilac schema upgrade tasks
#  import_tasks: mariadb_lilac_upgrade.yml
#  when: lilac_schema.stdout != db_lilac_schema_version and lilac_schema.changed

- name: check if lilac procedures are installed
  command: >
    mysql --batch --skip-column-names mysql --execute="SELECT count(routine_name) FROM information_schema.routines WHERE routine_type = 'PROCEDURE' AND routine_schema = '{{ db_lilac }}'";
  register: lilac_procedures
  changed_when: lilac_procedures.stdout != "6"

- name: inject default Lilac procedures on database
  shell: "mysql {{ db_lilac }} < /var/lib/rgm/lilac/lilac-procedures.sql"
  args:
    executable: /bin/bash
  register: lilac_procedures_inject
  changed_when: lilac_procedures_inject.rc == 1
  failed_when: lilac_procedures_inject.rc == 2
  when: lilac_procedures.changed

# notifier
- name: check if notifier schema is filled
  command: >
    mysql --batch --skip-column-names {{ db_notifier }} --execute='SELECT COUNT(*) FROM configs;'
  register: notifier_schema
  changed_when: notifier_schema.stdout == "0"
  ignore_errors: yes

- name: inject default notifier schema on database
  shell: "mysql {{ db_notifier }} < /usr/share/doc/notifier/sql/notifier.sql"
  args:
    executable: /bin/bash
  register: notifier_schema_inject
  changed_when: notifier_schema_inject.rc == 1
  failed_when: notifier_schema_inject.rc == 2
  when: notifier_schema.changed or notifier_schema.failed

- name: test if mariadb backup configuration file exist
  stat:
    path: /root/.my-backup.cnf
  register: mariadb_backup_conf

- name: check if MariaDB backup user is password protected
  command: mysql --defaults-extra-file=/root/.my-backup.cnf --host=localhost --user='{{ mariadb_backup_username }}' -e '\q'
  register: mariadb_backup_status
  changed_when: mariadb_backup_status.rc == 0 or mariadb_backup_conf.stat.exists == false
  failed_when: mariadb_backup_status.rc > 1

- name: include mariadb backup user management
  include_tasks: mariadb_backup_account.yml
  when: mariadb_backup_status.changed
