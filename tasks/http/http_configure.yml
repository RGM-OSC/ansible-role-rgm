---
- name: "HTTP | Configure | Add {{ rgm_group }} to apache user" # noqa name[template]
  ansible.builtin.user:
    name: apache
    groups: "{{ rgm_group }}"
    append: true

## php configuration
- name: "HTTP | Configure | Configure php.ini file" # noqa risky-file-permissions
  loop:
    - { section: 'Date', option: 'date.timezone',      value: 'Europe/Paris' } # noqa yaml[commas]
    - { section: 'PHP',  option: 'memory_limit',       value: '256M' } # noqa yaml[commas]
    - { section: 'PHP',  option: 'max_execution_time', value: '300' } # noqa yaml[commas]
    - { section: 'PHP',  option: 'error_reporting',    value: 'E_ERROR' } # noqa yaml[commas]
    - { section: 'PHP',  option: 'expose_php',         value: 'Off' } # noqa yaml[commas]
  notify: "Service reload http"
  community.general.ini_file:
    path: /etc/php.ini
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"

## apache configuration
- name: "HTTP | Configure | List enabled httpd configs"
  register: find_httpd_conf_d
  ansible.builtin.find:
    path: /etc/httpd/conf.d
    patterns: '*.conf'

- name: "HTTP | Configure | Ensure default httpd config files are disabled"
  loop: "{{ find_httpd_conf_d.files }}"
  loop_control:
    loop_var: http_conf
  when:
    - find_httpd_conf_d.matched > 0
    - http_conf.path | basename in apache_httpd_default_conf_to_disable
    - http_conf.size > 50
  ansible.builtin.command: "mv {{ http_conf.path }} {{ http_conf.path }}.distrib"

- name: "HTTP | Configure | Create httpd empty config files to avoid httpd package upgrade to recreate disabled files"
  loop: "{{ apache_httpd_default_conf_to_disable }}"
  ansible.builtin.copy:
    content: |
      # Disabled by RGM installer Ansible role
    dest: "/etc/httpd/conf.d/{{ item }}"
    owner: "root"
    group: "root"
    mode: "0640"

- name: "HTTP | Configure | Test if original fcgid.conf file exists"
  register: stat_fcgid_conf
  ansible.builtin.stat:
    path: /etc/httpd/conf.d/fcgid.conf

- name: "HTTP | Configure | Move fcgid.conf to 01_fcgid.conf"
  when: stat_fcgid_conf.stat.exists
  ansible.builtin.command: mv /etc/httpd/conf.d/fcgid.conf /etc/httpd/conf.d/01_fcgid.conf

- name: 'HTTP | Configure | Stat existing self-signed certificate'
  register: 'self_signed_certificate'
  ansible.builtin.stat:
    path: '/etc/pki/tls/certs/rgm.crt'

- name: 'HTTP | Configure | Generate self signed certificate'
  when: not self_signed_certificate.stat.exists
  block:
    - name: 'Generate self-signed private key'
      community.crypto.openssl_privatekey:
        path: '/etc/pki/tls/private/rgm.key'
        size: 2048
        type: 'RSA'
        backup: true
        owner: 'root'
        group: 'root'
        mode: '0600'

    - name: 'HTTP | Configure | Generate self-signed CSR'
      community.crypto.openssl_csr:
        path: '/etc/pki/tls/certs/rgm.csr'
        privatekey_path: '/etc/pki/tls/private/rgm.key'
        country_name: 'FR'
        state_or_province_name: 'IDF'
        locality_name: 'Nanteres'
        organization_name: 'SCC'
        organizational_unit_name: 'RGM'
        email_address: 'admin@{{ ansible_domain|default("localhost", true) }}'
        common_name: '{{ ansible_fqdn }}'
        subject_alt_name:
          - 'IP:127.0.0.1'
          - 'IP:{{ ansible_default_ipv4.address }}'
          - 'DNS:localhost'
        owner: 'root'
        group: 'root'
        mode: '0644'
        backup: true

    - name: 'HTTP | Configure | Generate self-signed certificate'
      community.crypto.x509_certificate:
        path: '/etc/pki/tls/certs/rgm.crt'
        csr_path: '/etc/pki/tls/certs/rgm.csr'
        privatekey_path: '/etc/pki/tls/private/rgm.key'
        provider: selfsigned
        owner: 'root'
        group: 'root'
        mode: '0644'
        backup: true

- name: "HTTP | Configure | Install RGM httpd config files"
  with_items:
    - { src: '00_hardening.conf',  dst: '00_hardening.conf'} # noqa yaml[commas]
    - { src: 'ssl.conf',           dst: '10_ssl.conf'} # noqa yaml[commas]
    - { src: 'zz_elastic_hq.conf', dst: 'zz_elastic_hq.conf.disabled'} # noqa yaml[commas]
    - { src: '00_fpm.conf',        dst: '00_fpm.conf'}  # noqa yaml[commas]
  notify:
    - "Service reload http"
    - "Service reload fpm"
  ansible.builtin.template:
    src: "httpd/{{ item.src }}.j2"
    dest: "/etc/httpd/conf.d/{{ item.dst }}"
    owner: "root"
    group: "root"
    mode: "0644"

## restart apache now as we'll use RGM API later on role
- name: 'HTTP | Configure | Flush handlers'
  ansible.builtin.meta: flush_handlers
