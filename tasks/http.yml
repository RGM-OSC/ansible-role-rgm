---
# tasks for Apache/php RGM setup
# vim: bs=2 sw=2 expandtab:

# This is redundant as all RPM packages are already installed from main tasks
# but we secure it in case the role might be called directly from its tags
- name: ensure Apache/php is installed
  yum:
    update_cache: no
    name: "{{ packages_apache }}"
    state: present

## add apache user to rgm group

- name: "add {{ rgm_group }} to apache user"
  ansible.builtin.user:
    name: apache
    groups: "{{ rgm_group }}"
    append: yes

## php configuration

- name: "configure php.ini file"
  ini_file:
    path: /etc/php.ini
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
  - { section: 'Date', option: 'date.timezone',      value: 'Europe/Paris' }
  - { section: 'PHP',  option: 'memory_limit',       value: '256M' }
  - { section: 'PHP',  option: 'max_execution_time', value: '300' }
  - { section: 'PHP',  option: 'error_reporting',    value: 'E_ERROR' }
  - { section: 'PHP',  option: 'expose_php',         value: 'Off' }
  notify: service_reload_http

## apache configuration

- name: list enabled httpd configs
  find:
    path: /etc/httpd/conf.d
    patterns: '*.conf'
  register: find_httpd_conf_d

- name: ensure default httpd config files are disabled
  command: "mv {{ http_conf.path }} {{ http_conf.path }}.distrib"
  loop: "{{ find_httpd_conf_d.files }}"
  loop_control:
    loop_var: http_conf
  when:
  - find_httpd_conf_d.matched > 0
  - http_conf.path | basename in apache_httpd_default_conf_to_disable
  - http_conf.size > 50

- name: create httpd empty config files to avoid httpd package upgrade to recreate disabled files
  copy:
    content: |
      # Disabled by RGM installer Ansible role
    dest: "/etc/httpd/conf.d/{{ item }}"
  loop: "{{ apache_httpd_default_conf_to_disable }}"

- name: test if original fcgid.conf file exists
  stat:
    path: /etc/httpd/conf.d/fcgid.conf
  register: stat_fcgid_conf

- name: move fcgid.conf to 01_fcgid.conf
  command: mv /etc/httpd/conf.d/fcgid.conf /etc/httpd/conf.d/01_fcgid.conf
  when: stat_fcgid_conf.stat.exists

- name: Install RGM httpd config files
  template:
    src: "httpd/{{ item.src }}.j2"
    dest: "/etc/httpd/conf.d/{{ item.dst }}"
    owner: root
    group: root
    mode: 0644
  with_items:
  - { src: '00_hardening.conf',  dst: '00_hardening.conf'}
  - { src: 'ssl.conf',           dst: '10_ssl.conf'}
  - { src: 'zz_elastic_hq.conf', dst: 'zz_elastic_hq.conf.disabled'}
  notify: service_reload_http


#ged_rss.conf
#histou.conf
#nagios.conf
#perl.conf
#php.conf
#thruk.conf



## restart apache now as we'll use RGM API later on role
- name: flush handlers
  meta: flush_handlers
