---
# tasks for mariadb_prep RGM setup
# mariadb preparation (install and configure)
# vim: bs=2 sw=2 expandtab:

# This is redundant as all RPM packages are already installed from main tasks
# but we secure it in case the role might be called directly from its tags
- name: ensure mariadb is installed
  yum:
    update_cache: no
    name: "{{ packages_mariadb }}"
    state: present
  tags: packages

- name: ensure MariaDB is up & running
  service:
    name: mariadb
    enabled: yes
    state: started
  tags:
  - mariadb
  - grafana

- name: check if MariaDB root user is password protected
  command: mysql --no-defaults --host=localhost --user=root -e '\q'
  register: mariadb_status
  changed_when: mariadb_status.rc != 1
  failed_when: mariadb_status.rc > 1

- block:
  - name: generate random root password for mariadb
    set_fact:
      mariadb_root_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits,-,_,!,.,*') }}"
    no_log: True

  - name: Set root user password
    mysql_user:
      name: root
      host: localhost
      password: "{{ mariadb_root_password }}"
      check_implicit_admin: yes
      login_user: root
      state: present
    no_log: True

  - name: set .my.cnf for root user
    template:
      src: mariadb/my.cnf.j2
      dest: /root/.my.cnf
      owner: root
      group: root
      mode: 0600
    vars:
      mariadbuser: 'root'
      mariadbpasswd: "{{ mariadb_root_password }}"
    no_log: True

  when: mariadb_status.changed

- name: ensure we can connect to mariadb
  command: mysql --host=localhost --user=root -e '\q'
  register: mariadb_status
  changed_when: mariadb_status.rc == 1
  failed_when: mariadb_status.rc == 2

- name: fail if can't connect to MariaDB server using root credentials
  fail:
    msg: |
      "Can't connect to MariaDB server using root credentials !"
      "Please check the /root/.my.cnf"
  when: mariadb_status.rc != 0

- name: Initialize databases
  include_tasks:
    file: mariadb_db.yml
    apply:
      tags: mariadb
      vars:
        db_name: "{{ item.name }}"
        db_user: "{{ item.user }}"
        db_pwd: "{{ item.pwd }}"
  with_items:
  - { name: "{{ db_grafana }}", user: "{{ mariadb_user }}", pwd: "{{ mariadb_pwd }}" }
  - { name: "{{ db_nagvis }}",  user: "{{ mariadb_user }}", pwd: "{{ mariadb_pwd }}" }
  - { name: "{{ db_lilac }}",   user: "{{ mariadb_user }}", pwd: "{{ mariadb_pwd }}" }
  - { name: "{{ db_notifier }}",   user: "{{ mariadb_user }}", pwd: "{{ mariadb_pwd }}" }

- name: create mariadb internal RO account
  mysql_user:
    name: "{{ mariadb_ro_user }}"
    host: localhost
    password: "{{ mariadb_ro_pwd }}"
    priv: '*.*:PROCESS,SELECT'
    append_privs: yes
    login_user: root
    state: present

- name: check if TZINFO data are present in MariaDB core database
  command: >
    mysql --batch --skip-column-names mysql
      --execute="select count(*) from time_zone_name where Name = 'Europe/Paris';"
  register: mariadb_tzinfo_count
  changed_when: mariadb_tzinfo_count.stdout != "1"

- name: inject TZINFO into MySQL core database
  shell: mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql mysql
  args:
    executable: /bin/bash
  when: mariadb_tzinfo_count.changed