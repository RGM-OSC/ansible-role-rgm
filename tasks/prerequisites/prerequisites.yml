---
- name: "Prerequisites | Configure proxy"
  when: proxy_host is defined
  tags:
    - always
  block:
    - name: "Prerequisites | Configure outgoing proxy if required"
      loop:
        - { key: 'http_proxy', value: "http://{{ proxy_host }}:{{ proxy_port }}/"}
        - { key: 'https_proxy', value: "http://{{ proxy_host }}:{{ proxy_port }}/"}
        - { key: 'no_proxy', value: "localhost,127.0.0.0/8"}
      ansible.builtin.lineinfile:
        path: "/etc/environment"
        regexp: "^{{ item.key }}=.*"
        line: "{{ item.key }}=\"{{ item.value }}\""
        insertafter: EOF
        owner: "root"
        group: "root"
        mode: "0644"
        seuser: "system_u"
        serole: "object_r"
        setype: "etc_t"
        selevel: "s0"

    - name: "Prerequisites | Configure proxy for yum"
      ansible.builtin.lineinfile:
        path: /etc/yum.conf
        regexp: '^proxy=.*'
        line: "proxy=http://{{ proxy_host }}:{{ proxy_port }}"
        insertafter: '^[main]$'

- name: "Prerequisites | Import hardening tasks"
  ansible.builtin.import_tasks: prerequisites/prerequisites_hardening.yml

- name: "Prerequisites | Override RHSM to exclude RGM packages also provided by EPEL"
  when:
    - rhsm_epel_repo is defined
    - rhsm_epel_repo | length > 0
  tags:
    - always
  ansible.builtin.command: "subscription-manager repo-override --repo={{ rhsm_epel_repo }} --add='exclude:nagios* elasticsearch* metricbeat* kibana* grafana* influxdb* snmptt'" # noqa yaml[line-length]

- name: "Prerequisites | Exclude nagios from EPEL repo" # noqa risky-file-permissions
  loop:
    - epel
    - epel-debuginfo
    - epel-source
  notify: "Yum regenerate cache"
  tags:
    - always
  community.general.ini_file:
    path: "/etc/yum.repos.d/epel.repo"
    section: "{{ item }}"
    option: exclude
    value: 'nagios* elasticsearch* metricbeat* kibana* grafana* influxdb* snmptt'

- name: 'Prerequisites | Ensure CRB repository is enabled'
  when:
    - ansible_distribution_major_version|int >= 9
  changed_when: false
  ansible.builtin.command: dnf config-manager --set-enabled crb

- name: "Prerequisites | Import rawhide tasks"
  when: enable_rawhide
  ansible.builtin.import_tasks: prerequisites/prerequisites_rawhide.yml

- name: "Prerequisites | Deploy vimrc configuration"
  loop:
    - "/root/.vimrc"
    - "/etc/skel/.vimrc"
  tags:
    - always
  ansible.builtin.copy:
    src: vimrc
    dest: "{{ item }}"
    owner: "root"
    group: "root"
    mode: "0640"

- name: "Prerequisites | Set RGM motd"
  tags:
    - always
  ansible.builtin.copy:
    src: rgm_motd.sh
    dest: /etc/profile.d/zzz_rgm.sh
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Prerequisites | Ensure RGM group is defined"
  tags:
    - always
  ansible.builtin.group:
    name: "{{ rgm_group }}"

- name: "Prerequisites | Create RGM user"
  no_log: true
  tags:
    - always
  ansible.builtin.user:
    name: "{{ rgm_user }}"
    home: "/home/rgm"
    comment: "RGM user"
    shell: "/bin/bash"
    group: "{{ rgm_group }}"
    groups: "wheel"
    append: true
    generate_ssh_key: true
    ssh_key_type: "rsa"
    ssh_key_comment: "RGM user key generated by Ansible on $HOSTNAME"
    ssh_key_bits: 2048
    ssh_key_file: ".ssh/id_rsa"
    update_password: on_create
    password: "{{ rgm_user_password | password_hash('sha512') }}"

- name: "Prerequisites | Declare sudoers files for RGM user"
  tags:
    - always
  ansible.builtin.template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/rgm"
    owner: "root"
    group: "root"
    mode: "0400"
    seuser: "system_u"
    serole: "object_r"
    setype: "etc_t"
    selevel: "s0"
