---
- name: "MariaDB | Install | Ensure MariaDB is installed"
  tags:
    - packages
    - rgm_packages
  ansible.builtin.yum:
    update_cache: false
    name: "{{ packages.mariadb }}"

- name: "MariaDB | Install | Install additionnal packages for EL7"
  when:
    - ansible_distribution_major_version|int == 7
  tags:
    - packages
    - rgm_packages
  ansible.builtin.yum:
    name: "{{ packages.mariadb_el7 }}"

- name: "MariaDB | Install | Install additionnal packages for EL9"
  when:
    - ansible_distribution_major_version|int >= 9
  tags:
    - packages
    - rgm_packages
  ansible.builtin.yum:
    name: "{{ packages.mariadb_el9 }}"

- name: "MariaDB | Install | Configure InnoDB to create tablespace per database on EL7"
  when:
    - ansible_distribution_major_version|int == 7
  tags:
    - packages
    - rgm_packages
  ansible.builtin.blockinfile:
    path: '/etc/my.cnf'
    marker: "#### {mark} ANSIBLE MANAGED BLOCK ####"
    insertafter: '\[mysqld\]'
    block: |
      innodb_file_per_table=ON
      innodb_defragment=ON

- name: "MariaDB | Install | Configure InnoDB to create tablespace per database on EL7"
  when:
    - ansible_distribution_major_version|int == 9
  tags:
    - packages
    - rgm_packages
  ansible.builtin.blockinfile:
    path: '/etc/my.cnf.d/mariadb-server.cnf'
    marker: "#### {mark} ANSIBLE MANAGED BLOCK ####"
    insertafter: '\[mysqld\]'
    block: |
      innodb_file_per_table=ON
      innodb_defragment=ON

- name: "MariaDB | Install | Deploy cron to optimize table"
  tags:
    - packages
    - rgm_packages
  ansible.builtin.copy:
    dest: /etc/cron.daily/mariadb_optimize
    owner: 'root'
    group: 'root'
    mode: '0750'
    seuser: 'system_u'
    serole: 'object_r'
    setype: 'bin_t'
    selevel: 's0'
    content: |
      #!/bin/bash
      for table in $(/usr/bin/mysql thruk_log_cache --batch -e 'show tables;' | grep -vE '^Tables_in_'); do
        echo "Optimize table : ${table}"
        /usr/bin/mysql thruk_log_cache --batch -e "OPTIMIZE TABLE ${table};"
      done

- name: "MariaDB | Install | Ensure MariaDB is up and running"
  ansible.builtin.systemd:
    name: mariadb
    enabled: true
    state: restarted

- name: "MariaDB | Install | Import root user configuration tasks"
  ansible.builtin.import_tasks: mariadb/users/mariadb_root.yml

- name: "MariaDB | Install | Ensure we can connect to MariaDB"
  community.mysql.mysql_info:
    config_file: "/root/.my.cnf"
    filter: version

- name: "MariaDB | Install | Import postinstall tasks"
  ansible.builtin.import_tasks: mariadb/mariadb_postinstall.yml
