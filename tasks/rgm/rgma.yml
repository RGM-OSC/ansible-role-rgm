---
- name: "RGMA | Check if rgma user already exists"
  register: getent_passwd
  ansible.builtin.getent:
    database: passwd
    key: "{{ rgma_user }}"
    fail_key: false

- name: "RGMA | Create random password for RGMA user"
  when: getent_passwd.rgmauser is not defined
  no_log: true
  ansible.builtin.set_fact:
    rgma_user_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits,-,_,!,.,*') }}"

- name: "RGMA | Ensure user exist"
  no_log: true
  ansible.builtin.user:
    name: "{{ rgma_user }}"
    home: "{{ rgm_root_path }}/rgma"
    comment: "RGMA user"
    shell: "/bin/bash"
    group: "{{ rgm_group }}"
    append: true
    generate_ssh_key: true
    ssh_key_type: "rsa"
    ssh_key_comment: "RGMA user key generated by Ansible on $HOSTNAME"
    ssh_key_bits: 2048
    ssh_key_file: ".ssh/id_rsa"
    update_password: on_create
    password: "{{ rgma_user_password | password_hash('sha512') }}"

- name: "RGMA | Create html subdir for rgma user"
  loop:
    - path: "{{ rgm_root_path }}/rgma/"
      mode: '0750'
      setype: 'user_home_dir_t'
    - path: "{{ rgm_root_path }}/rgma/html"
      owner: apache
      mode: '0770'
      setype: 'httpd_sys_rw_content_t'
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(rgma_user, true) }}"
    group: "{{ item.owner | default(rgm_group, true) }}"
    mode: "{{ item.mode }}"
    seuser: "system_u"
    serole: "object_r"
    setype: "{{ item.setype }}"
    selevel: "s0"

- name: "RGMA | Touch authorized_keys for rgma user"
  ansible.builtin.file:
    path: "{{ rgm_root_path }}/rgma/.ssh/authorized_keys"
    state: touch
    owner: "{{ rgma_user }}"
    group: "{{ rgm_group }}"
    seuser: "system_u"
    serole: "object_r"
    setype: "ssh_home_t"
    selevel: "s0"
    force: false
